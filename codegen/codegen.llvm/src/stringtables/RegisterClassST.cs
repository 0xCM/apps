namespace Z0.llvm.strings
{
    using System;

    using static core;

    public enum RegisterClassKind : uint
    {
        BNDR = 0,
        CCR = 1,
        CONTROL_REG = 2,
        DEBUG_REG = 3,
        DFCCR = 4,
        FPCCR = 5,
        FR32 = 6,
        FR32X = 7,
        FR64 = 8,
        FR64X = 9,
        GR16 = 10,
        GR16_ABCD = 11,
        GR16_NOREX = 12,
        GR32 = 13,
        GR32_ABCD = 14,
        GR32_AD = 15,
        GR32_BPSP = 16,
        GR32_BSI = 17,
        GR32_CB = 18,
        GR32_DC = 19,
        GR32_DIBP = 20,
        GR32_NOREX = 21,
        GR32_NOREX_NOSP = 22,
        GR32_NOSP = 23,
        GR32_SIDI = 24,
        GR32_TC = 25,
        GR64 = 26,
        GR64_ABCD = 27,
        GR64_AD = 28,
        GR64_NOREX = 29,
        GR64_NOREX_NOSP = 30,
        GR64_NOSP = 31,
        GR64_TC = 32,
        GR64_TCW64 = 33,
        GR8 = 34,
        GR8_ABCD_H = 35,
        GR8_ABCD_L = 36,
        GR8_NOREX = 37,
        GRH16 = 38,
        GRH8 = 39,
        LOW32_ADDR_ACCESS = 40,
        LOW32_ADDR_ACCESS_RBP = 41,
        RFP32 = 42,
        RFP64 = 43,
        RFP80 = 44,
        RFP80_7 = 45,
        RST = 46,
        SEGMENT_REG = 47,
        TILE = 48,
        VK1 = 49,
        VK16 = 50,
        VK16PAIR = 51,
        VK16WM = 52,
        VK1PAIR = 53,
        VK1WM = 54,
        VK2 = 55,
        VK2PAIR = 56,
        VK2WM = 57,
        VK32 = 58,
        VK32WM = 59,
        VK4 = 60,
        VK4PAIR = 61,
        VK4WM = 62,
        VK64 = 63,
        VK64WM = 64,
        VK8 = 65,
        VK8PAIR = 66,
        VK8WM = 67,
        VR128 = 68,
        VR128X = 69,
        VR256 = 70,
        VR256X = 71,
        VR512 = 72,
        VR512_0_15 = 73,
        VR64 = 74,
    }

    public readonly struct RegisterClassST
    {
        public const uint EntryCount = 75;

        public const uint CharCount = 517;

        public static MemoryAddress CharBase => address(Data);

        public static MemoryAddress OffsetBase => address(Offsets);

        public static MemoryStrings<RegisterClassKind> Strings => MemoryStrings.create(Offsets,Data);

        public static ReadOnlySpan<byte> Offsets => new byte[300]{0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x1b,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x25,0x00,0x00,0x00,0x29,0x00,0x00,0x00,0x2e,0x00,0x00,0x00,0x32,0x00,0x00,0x00,0x37,0x00,0x00,0x00,0x3b,0x00,0x00,0x00,0x44,0x00,0x00,0x00,0x4e,0x00,0x00,0x00,0x52,0x00,0x00,0x00,0x5b,0x00,0x00,0x00,0x62,0x00,0x00,0x00,0x6b,0x00,0x00,0x00,0x73,0x00,0x00,0x00,0x7a,0x00,0x00,0x00,0x81,0x00,0x00,0x00,0x8a,0x00,0x00,0x00,0x94,0x00,0x00,0x00,0xa3,0x00,0x00,0x00,0xac,0x00,0x00,0x00,0xb5,0x00,0x00,0x00,0xbc,0x00,0x00,0x00,0xc0,0x00,0x00,0x00,0xc9,0x00,0x00,0x00,0xd0,0x00,0x00,0x00,0xda,0x00,0x00,0x00,0xe9,0x00,0x00,0x00,0xf2,0x00,0x00,0x00,0xf9,0x00,0x00,0x00,0x03,0x01,0x00,0x00,0x06,0x01,0x00,0x00,0x10,0x01,0x00,0x00,0x1a,0x01,0x00,0x00,0x23,0x01,0x00,0x00,0x28,0x01,0x00,0x00,0x2c,0x01,0x00,0x00,0x3d,0x01,0x00,0x00,0x52,0x01,0x00,0x00,0x57,0x01,0x00,0x00,0x5c,0x01,0x00,0x00,0x61,0x01,0x00,0x00,0x68,0x01,0x00,0x00,0x6b,0x01,0x00,0x00,0x76,0x01,0x00,0x00,0x7a,0x01,0x00,0x00,0x7d,0x01,0x00,0x00,0x81,0x01,0x00,0x00,0x89,0x01,0x00,0x00,0x8f,0x01,0x00,0x00,0x96,0x01,0x00,0x00,0x9b,0x01,0x00,0x00,0x9e,0x01,0x00,0x00,0xa5,0x01,0x00,0x00,0xaa,0x01,0x00,0x00,0xae,0x01,0x00,0x00,0xb4,0x01,0x00,0x00,0xb7,0x01,0x00,0x00,0xbe,0x01,0x00,0x00,0xc3,0x01,0x00,0x00,0xc7,0x01,0x00,0x00,0xcd,0x01,0x00,0x00,0xd0,0x01,0x00,0x00,0xd7,0x01,0x00,0x00,0xdc,0x01,0x00,0x00,0xe1,0x01,0x00,0x00,0xe7,0x01,0x00,0x00,0xec,0x01,0x00,0x00,0xf2,0x01,0x00,0x00,0xf7,0x01,0x00,0x00,0x01,0x02,0x00,0x00};

        public static ReadOnlySpan<char> Data => new char[517]{'B','N','D','R','C','C','R','C','O','N','T','R','O','L','_','R','E','G','D','E','B','U','G','_','R','E','G','D','F','C','C','R','F','P','C','C','R','F','R','3','2','F','R','3','2','X','F','R','6','4','F','R','6','4','X','G','R','1','6','G','R','1','6','_','A','B','C','D','G','R','1','6','_','N','O','R','E','X','G','R','3','2','G','R','3','2','_','A','B','C','D','G','R','3','2','_','A','D','G','R','3','2','_','B','P','S','P','G','R','3','2','_','B','S','I','G','R','3','2','_','C','B','G','R','3','2','_','D','C','G','R','3','2','_','D','I','B','P','G','R','3','2','_','N','O','R','E','X','G','R','3','2','_','N','O','R','E','X','_','N','O','S','P','G','R','3','2','_','N','O','S','P','G','R','3','2','_','S','I','D','I','G','R','3','2','_','T','C','G','R','6','4','G','R','6','4','_','A','B','C','D','G','R','6','4','_','A','D','G','R','6','4','_','N','O','R','E','X','G','R','6','4','_','N','O','R','E','X','_','N','O','S','P','G','R','6','4','_','N','O','S','P','G','R','6','4','_','T','C','G','R','6','4','_','T','C','W','6','4','G','R','8','G','R','8','_','A','B','C','D','_','H','G','R','8','_','A','B','C','D','_','L','G','R','8','_','N','O','R','E','X','G','R','H','1','6','G','R','H','8','L','O','W','3','2','_','A','D','D','R','_','A','C','C','E','S','S','L','O','W','3','2','_','A','D','D','R','_','A','C','C','E','S','S','_','R','B','P','R','F','P','3','2','R','F','P','6','4','R','F','P','8','0','R','F','P','8','0','_','7','R','S','T','S','E','G','M','E','N','T','_','R','E','G','T','I','L','E','V','K','1','V','K','1','6','V','K','1','6','P','A','I','R','V','K','1','6','W','M','V','K','1','P','A','I','R','V','K','1','W','M','V','K','2','V','K','2','P','A','I','R','V','K','2','W','M','V','K','3','2','V','K','3','2','W','M','V','K','4','V','K','4','P','A','I','R','V','K','4','W','M','V','K','6','4','V','K','6','4','W','M','V','K','8','V','K','8','P','A','I','R','V','K','8','W','M','V','R','1','2','8','V','R','1','2','8','X','V','R','2','5','6','V','R','2','5','6','X','V','R','5','1','2','V','R','5','1','2','_','0','_','1','5','V','R','6','4',};
    }
}
