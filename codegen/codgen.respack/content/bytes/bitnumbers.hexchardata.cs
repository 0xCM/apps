//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2021
// License     :  MIT
// Generated   : 2022-01-07 15:36:33 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class bitnumbers_hexchardata
    {
        public static ReadOnlySpan<byte> get_Segmentsヽᐤᐤ  =>  new byte[165]{0x48,0x83,0xec,0x28,0xc5,0xf8,0x77,0x48,0xb9,0xb0,0xc4,0x24,0x78,0xfd,0x7f,0x00,0x00,0xba,0x04,0x00,0x00,0x00,0xe8,0x45,0x81,0x1a,0x5b,0x48,0xb9,0x24,0x05,0x51,0x7f,0xd5,0x01,0x00,0x00,0xc4,0xe1,0xf9,0x6e,0xc1,0xb9,0x20,0x00,0x00,0x00,0xc4,0xe3,0xf9,0x22,0xc1,0x01,0xc5,0xf9,0x11,0x40,0x10,0x48,0xb9,0xec,0x04,0x51,0x7f,0xd5,0x01,0x00,0x00,0xc4,0xe1,0xf9,0x6e,0xc1,0xb9,0x20,0x00,0x00,0x00,0xc4,0xe3,0xf9,0x22,0xc1,0x01,0xc5,0xf9,0x11,0x40,0x20,0x48,0xb9,0x14,0x05,0x51,0x7f,0xd5,0x01,0x00,0x00,0xc4,0xe1,0xf9,0x6e,0xc1,0xb9,0x10,0x00,0x00,0x00,0xc4,0xe3,0xf9,0x22,0xc1,0x01,0xc5,0xf9,0x11,0x40,0x30,0x48,0xb9,0xec,0x06,0x51,0x7f,0xd5,0x01,0x00,0x00,0xc4,0xe1,0xf9,0x6e,0xc1,0xb9,0x10,0x00,0x00,0x00,0xc4,0xe3,0xf9,0x22,0xc1,0x01,0xc5,0xf9,0x11,0x40,0x40,0x48,0x8b,0xc8,0xe8,0x71,0xf1,0xff,0xff,0x90,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> get_UpperCodesヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x14,0x05,0x51,0x7f,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x10,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_LowerCodesヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0xec,0x06,0x51,0x7f,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x10,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_UpperSymDataヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x24,0x05,0x51,0x7f,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x20,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_LowerSymDataヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0xec,0x04,0x51,0x7f,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x20,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_UpperSymbolsヽᐤᐤ  =>  new byte[30]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x10,0x00,0x00,0x00,0x48,0xba,0x24,0x05,0x51,0x7f,0xd5,0x01,0x00,0x00,0x48,0x89,0x11,0x89,0x41,0x08,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_LowerSymbolsヽᐤᐤ  =>  new byte[30]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x10,0x00,0x00,0x00,0x48,0xba,0xec,0x04,0x51,0x7f,0xd5,0x01,0x00,0x00,0x48,0x89,0x11,0x89,0x41,0x08,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_LowerSymbolCountヽᐤᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x20,0x00,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> get_UpperSymbolCountヽᐤᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x20,0x00,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> get_UpperHexDigitsヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x14,0x05,0x51,0x7f,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x10,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_LowerHexDigitsヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0xec,0x06,0x51,0x7f,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x10,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

    }
}
