//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2021
// License     :  MIT
// Generated   : 2022-01-07 15:36:31 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class root_ascichars
    {
        public static ReadOnlySpan<byte> get_CharBytesヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x04,0x43,0x93,0x7b,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x00,0x01,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_CodeBytesヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x8c,0x40,0x93,0x7b,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x80,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_DecimalDigitsヽᐤᐤ  =>  new byte[56]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x18,0x11,0x5e,0x73,0xd5,0x01,0x00,0x00,0x48,0x8b,0x00,0x48,0x85,0xc0,0x75,0x07,0x33,0xd2,0x45,0x33,0xc0,0xeb,0x0f,0x8b,0x10,0x48,0x8b,0xd0,0x39,0x12,0x48,0x83,0xc2,0x0c,0x44,0x8b,0x40,0x08,0x48,0x89,0x11,0x44,0x89,0x41,0x08,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_DecimalDigitCodesヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0xbc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x0a,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_WhitespaceCodesヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x04,0x45,0x93,0x7b,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x06,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_UpperLettersヽᐤᐤ  =>  new byte[56]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x50,0x34,0x4d,0x73,0xd5,0x01,0x00,0x00,0x48,0x8b,0x00,0x48,0x85,0xc0,0x75,0x07,0x33,0xd2,0x45,0x33,0xc0,0xeb,0x0f,0x8b,0x10,0x48,0x8b,0xd0,0x39,0x12,0x48,0x83,0xc2,0x0c,0x44,0x8b,0x40,0x08,0x48,0x89,0x11,0x44,0x89,0x41,0x08,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_UpperLetterCodesヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x3c,0x49,0x93,0x7b,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x1a,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_LowerLettersヽᐤᐤ  =>  new byte[56]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x48,0x34,0x4d,0x73,0xd5,0x01,0x00,0x00,0x48,0x8b,0x00,0x48,0x85,0xc0,0x75,0x07,0x33,0xd2,0x45,0x33,0xc0,0xeb,0x0f,0x8b,0x10,0x48,0x8b,0xd0,0x39,0x12,0x48,0x83,0xc2,0x0c,0x44,0x8b,0x40,0x08,0x48,0x89,0x11,0x44,0x89,0x41,0x08,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_LowerLetterCodesヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x14,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x1a,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

    }
}
