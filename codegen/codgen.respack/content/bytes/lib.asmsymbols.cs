//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2021
// License     :  MIT
// Generated   : 2022-01-07 15:36:31 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class lib_asmsymbols
    {
        public static ReadOnlySpan<byte> SymbolヽᐤGp8LoRegᕀ8uᐤ  =>  new byte[39]{0x48,0x83,0xec,0x18,0x90,0x48,0x8b,0x41,0x08,0x8b,0x08,0x48,0x83,0xc0,0x18,0x0f,0xb6,0xd2,0x0f,0xb7,0xd2,0x48,0x8b,0x00,0x39,0x00,0x48,0x83,0xc0,0x10,0x48,0x8d,0x04,0xd0,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> SymbolヽᐤGp16Regᕀ8uᐤ  =>  new byte[39]{0x48,0x83,0xec,0x18,0x90,0x48,0x8b,0x41,0x18,0x8b,0x08,0x48,0x83,0xc0,0x18,0x0f,0xb6,0xd2,0x0f,0xb7,0xd2,0x48,0x8b,0x00,0x39,0x00,0x48,0x83,0xc0,0x10,0x48,0x8d,0x04,0xd0,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> SymbolヽᐤGp32Regᕀ8uᐤ  =>  new byte[39]{0x48,0x83,0xec,0x18,0x90,0x48,0x8b,0x41,0x20,0x8b,0x08,0x48,0x83,0xc0,0x18,0x0f,0xb6,0xd2,0x0f,0xb7,0xd2,0x48,0x8b,0x00,0x39,0x00,0x48,0x83,0xc0,0x10,0x48,0x8d,0x04,0xd0,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> SymbolヽᐤGp64Regᕀ8uᐤ  =>  new byte[39]{0x48,0x83,0xec,0x18,0x90,0x48,0x8b,0x41,0x28,0x8b,0x08,0x48,0x83,0xc0,0x18,0x0f,0xb6,0xd2,0x0f,0xb7,0xd2,0x48,0x8b,0x00,0x39,0x00,0x48,0x83,0xc0,0x10,0x48,0x8d,0x04,0xd0,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> SymbolヽᐤKRegᕀ8uᐤ  =>  new byte[39]{0x48,0x83,0xec,0x18,0x90,0x48,0x8b,0x41,0x30,0x8b,0x08,0x48,0x83,0xc0,0x18,0x0f,0xb6,0xd2,0x0f,0xb7,0xd2,0x48,0x8b,0x00,0x39,0x00,0x48,0x83,0xc0,0x10,0x48,0x8d,0x04,0xd0,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> SymbolヽᐤXmmRegᕀ8uᐤ  =>  new byte[39]{0x48,0x83,0xec,0x18,0x90,0x48,0x8b,0x41,0x38,0x8b,0x08,0x48,0x83,0xc0,0x18,0x0f,0xb6,0xd2,0x0f,0xb7,0xd2,0x48,0x8b,0x00,0x39,0x00,0x48,0x83,0xc0,0x10,0x48,0x8d,0x04,0xd0,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> SymbolヽᐤYmmRegᕀ8uᐤ  =>  new byte[39]{0x48,0x83,0xec,0x18,0x90,0x48,0x8b,0x41,0x40,0x8b,0x08,0x48,0x83,0xc0,0x18,0x0f,0xb6,0xd2,0x0f,0xb7,0xd2,0x48,0x8b,0x00,0x39,0x00,0x48,0x83,0xc0,0x10,0x48,0x8d,0x04,0xd0,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> SymbolヽᐤZmmRegᕀ8uᐤ  =>  new byte[39]{0x48,0x83,0xec,0x18,0x90,0x48,0x8b,0x41,0x48,0x8b,0x08,0x48,0x83,0xc0,0x18,0x0f,0xb6,0xd2,0x0f,0xb7,0xd2,0x48,0x8b,0x00,0x39,0x00,0x48,0x83,0xc0,0x10,0x48,0x8d,0x04,0xd0,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> SymbolヽᐤControlRegᕀ8uᐤ  =>  new byte[39]{0x48,0x83,0xec,0x18,0x90,0x48,0x8b,0x41,0x58,0x8b,0x08,0x48,0x83,0xc0,0x18,0x0f,0xb6,0xd2,0x0f,0xb7,0xd2,0x48,0x8b,0x00,0x39,0x00,0x48,0x83,0xc0,0x10,0x48,0x8d,0x04,0xd0,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> SymbolヽᐤDebugRegᕀ32uᐤ  =>  new byte[36]{0x50,0x0f,0x1f,0x40,0x00,0x48,0x8b,0x41,0x70,0x8b,0x08,0x48,0x83,0xc0,0x18,0x0f,0xb7,0xd2,0x48,0x8b,0x00,0x39,0x00,0x48,0x83,0xc0,0x10,0x48,0x8d,0x04,0xd0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> Gp8Regsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x08,0xc3};

        public static ReadOnlySpan<byte> Gp8Regsヽᐤbitᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x89,0x54,0x24,0x10,0x48,0x8b,0x41,0x10,0xc3};

        public static ReadOnlySpan<byte> Gp16Regsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x18,0xc3};

        public static ReadOnlySpan<byte> Gp32Regsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x20,0xc3};

        public static ReadOnlySpan<byte> Gp64Regsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x28,0xc3};

        public static ReadOnlySpan<byte> XmmRegsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x38,0xc3};

        public static ReadOnlySpan<byte> YmmRegsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x40,0xc3};

        public static ReadOnlySpan<byte> ZmmRegsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x48,0xc3};

        public static ReadOnlySpan<byte> MaskRegsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x30,0xc3};

        public static ReadOnlySpan<byte> MmxRegsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x50,0xc3};

        public static ReadOnlySpan<byte> BndRegsヽᐤᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x81,0x80,0x00,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> ControlRegsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x58,0xc3};

        public static ReadOnlySpan<byte> DebugRegsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x70,0xc3};

        public static ReadOnlySpan<byte> SegRegsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x60,0xc3};

        public static ReadOnlySpan<byte> FpuRegsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x68,0xc3};

        public static ReadOnlySpan<byte> TestRegsヽᐤᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x81,0x88,0x00,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> SysPtrRegsヽᐤᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x78,0xc3};

    }
}
