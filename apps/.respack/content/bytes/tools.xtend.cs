//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2021
// License     :  MIT
// Generated   : 2021-11-14 3:49:56 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class tools_xtend
    {
        public static ReadOnlySpan<byte> RawヽᐤBlobHandleᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> RawヽᐤStringHandleᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> RawヽᐤUserStringHandleᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> GetHeapOffsetヽᐤBlobHandleᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> GetHeapOffsetヽᐤStringHandleᐤ  =>  new byte[16]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x48,0xc1,0xe0,0x03,0x48,0xc1,0xe8,0x03,0xc3};

        public static ReadOnlySpan<byte> GetHeapOffsetヽᐤUserStringHandleᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> IsEmptyヽᐤStringHandleᐤ  =>  new byte[18]{0x0f,0x1f,0x44,0x00,0x00,0xf7,0xc1,0xff,0xff,0xff,0x9f,0x0f,0x94,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> IsNonEmptyヽᐤStringHandleᐤ  =>  new byte[18]{0x0f,0x1f,0x44,0x00,0x00,0xf7,0xc1,0xff,0xff,0xff,0x9f,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> GetVirtualIndexヽᐤBlobHandleᐤ  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0xc3};

        public static ReadOnlySpan<byte> GetVirtualIndexヽᐤStringHandleᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x25,0xff,0xff,0xff,0x1f,0xc3};

        public static ReadOnlySpan<byte> IsVirtualヽᐤBlobHandleᐤ  =>  new byte[18]{0x0f,0x1f,0x44,0x00,0x00,0xf7,0xc1,0x00,0x00,0x00,0x80,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> IsVirtualヽᐤStringHandleᐤ  =>  new byte[18]{0x0f,0x1f,0x44,0x00,0x00,0xf7,0xc1,0x00,0x00,0x00,0x80,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> VirtualValueヽᐤBlobHandleᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0xc1,0xe9,0x08,0x0f,0xb7,0xc1,0xc3};

        public static ReadOnlySpan<byte> SubstituteTemplateParametersヽᐤBlobHandleㆍarray_8uᐤ  =>  new byte[88]{0x48,0x83,0xec,0x28,0x33,0xc0,0x48,0x89,0x44,0x24,0x20,0x83,0x7a,0x08,0x02,0x76,0x22,0x48,0x83,0xc2,0x12,0x48,0x89,0x54,0x24,0x20,0x48,0x8b,0x44,0x24,0x20,0xc1,0xe9,0x08,0x0f,0xb7,0xd1,0x89,0x10,0x33,0xc0,0x48,0x89,0x44,0x24,0x20,0x48,0x83,0xc4,0x28,0xc3,0xe8,0xf8,0xb7,0xe4,0x5c,0xcc,0x00,0x00,0x00,0x19,0x04,0x01,0x00,0x04,0x42,0x00,0x00,0x40,0x00,0x00,0x00,0x28,0xea,0xe3,0x82,0xfe,0x7f,0x00,0x00,0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> IndexヽᐤGuidHandleᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> StringKindヽᐤStringHandleᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0xc1,0xe9,0x1d,0x0f,0xb6,0xc1,0xc3};

    }
}
