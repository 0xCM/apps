//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2021
// License     :  MIT
// Generated   : 2021-11-14 3:49:56 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class api_msg
    {
        public static ReadOnlySpan<byte> get_FieldCountMismatchヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0xf0,0xfb,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_IndexedHostヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0xf8,0xfb,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_IndexingHostsヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x00,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_CreatingHostCatalogヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x08,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_CreatedHostCatalogヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x10,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_HostFileMissingヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x18,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_IndexingPartFilesヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x20,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_IndexingCodeBlocksヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x28,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_AbsorbedCodeBlocksヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x30,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Unbasedヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x38,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_DuplicateUriヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x40,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_CorrelatingPartsヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x48,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_CorrelatingOperationsヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x50,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_JittingPartsヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x58,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_JittingPartヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x60,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_JittedPartヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x68,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_JittedPartsヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x70,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_LocatingSegmentsヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x78,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_LocatedSegmentsヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x80,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_SegSelectorNotFoundヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x88,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_LoadingApiCatalogヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x90,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_LoadedApiCatalogヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x98,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_NoMatchingResourcesヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0xa0,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_EmittingResourcesヽᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0xa8,0xfc,0xca,0x45,0x59,0x02,0x00,0x00,0x48,0x8b,0x00,0xc3};

    }
}
