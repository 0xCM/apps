//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2021
// License     :  MIT
// Generated   : 2021-11-14 3:49:54 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class root_primalbits
    {
        public static ReadOnlySpan<byte> filterヽᐤ8uㆍSegMaskᕀ8uᐤ  =>  new byte[17]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x23,0xc2,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> filterヽᐤPrimitiveKindᕀ8uㆍFieldᕀ8uᐤ  =>  new byte[34]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc2,0x48,0x63,0xc0,0x48,0xba,0x0c,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x0f,0xb6,0xd1,0x23,0xc2,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> selectヽᐤPrimitiveKindᕀ8uㆍFieldᕀ8uᐤ  =>  new byte[58]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc2,0x48,0x63,0xc0,0x48,0xba,0x0c,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x14,0x10,0x0f,0xb6,0xc9,0x23,0xca,0x0f,0xb6,0xc9,0x48,0xba,0x04,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x0f,0xb6,0xd1,0x8b,0xc8,0xd3,0xfa,0x0f,0xb6,0xc2,0xc3};

        public static ReadOnlySpan<byte> kindヽᐤTypeCodeᕀ32iᐤ  =>  new byte[23]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x63,0xc1,0x48,0xba,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0xc3};

        public static ReadOnlySpan<byte> codeヽᐤPrimitiveKindᕀ8uᐤ  =>  new byte[50]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x0d,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x00,0x0f,0xb6,0xc9,0x23,0xc8,0x0f,0xb6,0xc9,0x48,0xb8,0x05,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x00,0x0f,0xb6,0xd1,0x8b,0xc8,0xd3,0xfa,0x0f,0xb6,0xc2,0xc3};

        public static ReadOnlySpan<byte> kindヽᐤTypeᐤ  =>  new byte[32]{0x48,0x83,0xec,0x28,0x90,0xe8,0xa6,0x34,0x10,0xfd,0x48,0x63,0xc0,0x48,0xba,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> get_Kindsヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x13,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> filterヽᐤFieldᕀ8uᐤ  =>  new byte[25]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x48,0x63,0xc0,0x48,0xba,0x0c,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x48,0x03,0xc2,0xc3};

        public static ReadOnlySpan<byte> indexヽᐤFieldᕀ8uᐤ  =>  new byte[25]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x48,0x63,0xc0,0x48,0xba,0x04,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x48,0x03,0xc2,0xc3};

        public static ReadOnlySpan<byte> viewヽᐤPrimitiveKindᕀ8uㆍSegPosᕀ8uᐤ  =>  new byte[17]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xca,0xd3,0xf8,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> kindヽgᐸ8uᐳᐤᐤ  =>  new byte[32]{0x48,0x83,0xec,0x28,0x90,0xe8,0xc6,0xfb,0xff,0xff,0x48,0x63,0xc0,0x48,0xba,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> kindヽgᐸ8iᐳᐤᐤ  =>  new byte[32]{0x48,0x83,0xec,0x28,0x90,0xe8,0xc6,0xfb,0xff,0xff,0x48,0x63,0xc0,0x48,0xba,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> kindヽgᐸ16uᐳᐤᐤ  =>  new byte[32]{0x48,0x83,0xec,0x28,0x90,0xe8,0xb6,0xfb,0xff,0xff,0x48,0x63,0xc0,0x48,0xba,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> kindヽgᐸ16iᐳᐤᐤ  =>  new byte[32]{0x48,0x83,0xec,0x28,0x90,0xe8,0xa6,0xfb,0xff,0xff,0x48,0x63,0xc0,0x48,0xba,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> kindヽgᐸ32uᐳᐤᐤ  =>  new byte[32]{0x48,0x83,0xec,0x28,0x90,0xe8,0xfe,0xfb,0xff,0xff,0x48,0x63,0xc0,0x48,0xba,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> kindヽgᐸ32iᐳᐤᐤ  =>  new byte[32]{0x48,0x83,0xec,0x28,0x90,0xe8,0xee,0xfb,0xff,0xff,0x48,0x63,0xc0,0x48,0xba,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> kindヽgᐸ64uᐳᐤᐤ  =>  new byte[32]{0x48,0x83,0xec,0x28,0x90,0xe8,0xde,0xfb,0xff,0xff,0x48,0x63,0xc0,0x48,0xba,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> kindヽgᐸ64iᐳᐤᐤ  =>  new byte[32]{0x48,0x83,0xec,0x28,0x90,0xe8,0xce,0xfb,0xff,0xff,0x48,0x63,0xc0,0x48,0xba,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> kindヽgᐸ32fᐳᐤᐤ  =>  new byte[32]{0x48,0x83,0xec,0x28,0x90,0xe8,0xbe,0xfb,0xff,0xff,0x48,0x63,0xc0,0x48,0xba,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> kindヽgᐸ64fᐳᐤᐤ  =>  new byte[32]{0x48,0x83,0xec,0x28,0x90,0xe8,0xae,0xfb,0xff,0xff,0x48,0x63,0xc0,0x48,0xba,0xcc,0x44,0x93,0x7b,0xd5,0x01,0x00,0x00,0x0f,0xb6,0x04,0x10,0x48,0x83,0xc4,0x28,0xc3};

    }
}
