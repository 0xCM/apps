//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2021
// License     :  MIT
// Generated   : 2021-11-14 3:49:54 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class asmm_asmopcodebits
    {
        public static ReadOnlySpan<byte> get_IsEmptyヽᐤᐤ  =>  new byte[16]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x83,0x39,0x00,0x0f,0x94,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> get_IsNonEmptyヽᐤᐤ  =>  new byte[16]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x83,0x39,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> get_TokenCountヽᐤᐤ  =>  new byte[18]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x01,0x48,0xc1,0xe8,0x10,0x25,0xff,0x00,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> IncludeヽᐤAsmOcTokenᐤ  =>  new byte[120]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x54,0x24,0x10,0x48,0x8b,0xc1,0x48,0x8b,0x08,0x48,0x8b,0xd1,0x48,0xc1,0xea,0x10,0x81,0xe2,0xff,0x00,0x00,0x00,0x44,0x8d,0x42,0x01,0x45,0x0f,0xb6,0xc0,0x48,0x81,0xe1,0xff,0xff,0x00,0xff,0x48,0x89,0x08,0x41,0x8b,0xc8,0x48,0xc1,0xe1,0x10,0x48,0x09,0x08,0x0f,0xb6,0x4c,0x24,0x10,0x4c,0x8b,0x00,0x44,0x0f,0xb7,0x08,0xff,0xc9,0x0f,0xb6,0xc9,0x41,0xba,0x01,0x00,0x00,0x00,0x41,0xd3,0xe2,0x41,0x0f,0xb7,0xca,0x41,0x0b,0xc9,0x0f,0xb7,0xc9,0x49,0x0b,0xc8,0x48,0x89,0x08,0x48,0x8d,0x48,0x03,0x48,0x63,0xd2,0x48,0x03,0xd1,0x0f,0xb6,0x4c,0x24,0x11,0x88,0x0a,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Valuesヽᐤᐤ  =>  new byte[23]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x83,0xc1,0x03,0x48,0x89,0x0a,0xc7,0x42,0x08,0x05,0x00,0x00,0x00,0x48,0x8b,0xc2,0xc3};

        public static ReadOnlySpan<byte> Valueヽᐤ8uᐤ  =>  new byte[22]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x83,0xc1,0x03,0x48,0x8b,0xc1,0x0f,0xb6,0xd2,0x48,0x63,0xd2,0x48,0x03,0xc2,0xc3};

        public static ReadOnlySpan<byte> IncTokenCountヽᐤ8uᕀoutᐤ  =>  new byte[44]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x01,0x48,0xc1,0xe8,0x10,0x25,0xff,0x00,0x00,0x00,0x88,0x02,0x0f,0xb6,0x02,0xff,0xc0,0x0f,0xb6,0xc0,0x48,0x81,0x21,0xff,0xff,0x00,0xff,0x8b,0xd0,0x48,0xc1,0xe2,0x10,0x48,0x09,0x11,0xc3};

        public static ReadOnlySpan<byte> EnableヽᐤAsmOcTokenKindᕀ8uᐤ  =>  new byte[46]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc1,0x4c,0x8b,0x00,0x44,0x0f,0xb7,0x08,0x0f,0xb6,0xca,0xff,0xc9,0x0f,0xb6,0xc9,0xba,0x01,0x00,0x00,0x00,0xd3,0xe2,0x0f,0xb7,0xd2,0x41,0x0b,0xd1,0x0f,0xb7,0xd2,0x49,0x0b,0xd0,0x48,0x89,0x10,0xc3};

        public static ReadOnlySpan<byte> get_Emptyヽᐤᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x33,0xc0,0xc3};

    }
}
