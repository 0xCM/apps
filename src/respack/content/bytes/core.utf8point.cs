//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2021
// License     :  MIT
// Generated   : 2021-12-01 21:34:44 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class core_utf8point
    {
        public static ReadOnlySpan<byte> CompareToヽᐤUtf8Pointᐤ  =>  new byte[711]{0xe9,0xe3,0xe7,0x15,0x02,0x5f,0x19,0x18,0xe8,0x6b,0x43,0x8f,0x5e,0x5e,0x1a,0x17,0xe8,0x63,0x43,0x8f,0x5e,0x5e,0x1c,0x16,0xe8,0x5b,0x43,0x8f,0x5e,0x5e,0x1d,0x15,0xe8,0x53,0x43,0x8f,0x5e,0x5e,0x1f,0x14,0xe8,0x4b,0x43,0x8f,0x5e,0x5e,0x20,0x13,0xe8,0x43,0x43,0x8f,0x5e,0x5e,0x22,0x12,0xe8,0x3b,0x43,0x8f,0x5e,0x5e,0x24,0x11,0xe8,0x33,0x43,0x8f,0x5e,0x5e,0x25,0x10,0xe8,0x2b,0x43,0x8f,0x5e,0x5e,0x27,0x0f,0xe8,0x23,0x43,0x8f,0x5e,0x5e,0x29,0x0e,0xe8,0x1b,0x43,0x8f,0x5e,0x5e,0x2b,0x0d,0xe8,0x13,0x43,0x8f,0x5e,0x5e,0x2d,0x0c,0xe8,0x0b,0x43,0x8f,0x5e,0x5e,0x2f,0x0b,0xe8,0x03,0x43,0x8f,0x5e,0x5e,0x31,0x0a,0xe8,0xfb,0x42,0x8f,0x5e,0x5e,0x33,0x09,0xe8,0xf3,0x42,0x8f,0x5e,0x5e,0x35,0x08,0xe8,0xeb,0x42,0x8f,0x5e,0x5e,0x37,0x07,0xe8,0xe3,0x42,0x8f,0x5e,0x5e,0x39,0x06,0xe8,0xdb,0x42,0x8f,0x5e,0x5e,0x3b,0x05,0xe8,0xd3,0x42,0x8f,0x5e,0x5e,0x3d,0x04,0xe8,0xcb,0x42,0x8f,0x5e,0x5e,0x3f,0x03,0xe8,0xc3,0x42,0x8f,0x5e,0x5e,0x41,0x02,0xe8,0xbb,0x42,0x8f,0x5e,0x5e,0x43,0x01,0xe8,0xb3,0x42,0x8f,0x5e,0x5e,0x45,0x00,0x28,0xd7,0x27,0x78,0xfd,0x7f,0x00,0x00,0xe8,0xa3,0x42,0x8f,0x5e,0x5e,0x00,0x01,0xe8,0x9b,0x42,0x8f,0x5e,0x5e,0x02,0x00,0x98,0xdc,0x27,0x78,0xfd,0x7f,0x00,0x00,0xe8,0x8b,0x42,0x8f,0x5e,0x5e,0x00,0x04,0xe8,0x83,0x42,0x8f,0x5e,0x5e,0x02,0x03,0xe8,0x7b,0x42,0x8f,0x5e,0x5e,0x04,0x02,0xe8,0x73,0x42,0x8f,0x5e,0x5e,0x06,0x01,0xe8,0x6b,0x42,0x8f,0x5e,0x5e,0x08,0x00,0x00,0xde,0x27,0x78,0xfd,0x7f,0x00,0x00,0xe8,0x5b,0x42,0x8f,0x5e,0x5e,0x00,0x0d,0xe8,0x53,0x42,0x8f,0x5e,0x5e,0x02,0x0c,0xe8,0x4b,0x42,0x8f,0x5e,0x5e,0x04,0x0b,0xe8,0x43,0x42,0x8f,0x5e,0x5e,0x06,0x0a,0xe8,0x3b,0x42,0x8f,0x5e,0x5e,0x08,0x09,0xe8,0x33,0x42,0x8f,0x5e,0x5e,0x0a,0x08,0xe8,0x2b,0x42,0x8f,0x5e,0x5e,0x0c,0x07,0xe8,0x23,0x42,0x8f,0x5e,0x5e,0x0e,0x06,0xe8,0x1b,0x42,0x8f,0x5e,0x5e,0x10,0x05,0xe8,0x13,0x42,0x8f,0x5e,0x5e,0x12,0x04,0xe8,0x0b,0x42,0x8f,0x5e,0x5e,0x13,0x03,0xe8,0x03,0x42,0x8f,0x5e,0x5e,0x15,0x02,0xe8,0xfb,0x41,0x8f,0x5e,0x5e,0x17,0x01,0xe8,0xf3,0x41,0x8f,0x5e,0x5e,0x19,0x00,0xf8,0xde,0x27,0x78,0xfd,0x7f,0x00,0x00,0xe8,0xe3,0x41,0x8f,0x5e,0x5e,0x00,0x04,0xe8,0xdb,0x41,0x8f,0x5e,0x5e,0x02,0x03,0xe8,0xd3,0x41,0x8f,0x5e,0x5e,0x04,0x02,0xe8,0xcb,0x41,0x8f,0x5e,0x5e,0x06,0x01,0xe8,0xc3,0x41,0x8f,0x5e,0x5e,0x08,0x00,0xa8,0xe0,0x27,0x78,0xfd,0x7f,0x00,0x00,0xe8,0xb3,0x41,0x8f,0x5e,0x5e,0x00,0x0c,0xe8,0xab,0x41,0x8f,0x5e,0x5e,0x02,0x0b,0xe8,0xa3,0x41,0x8f,0x5e,0x5e,0x04,0x0a,0xe8,0x9b,0x41,0x8f,0x5e,0x5e,0x06,0x09,0xe8,0x93,0x41,0x8f,0x5e,0x5e,0x08,0x08,0xe8,0x8b,0x41,0x8f,0x5e,0x5e,0x0a,0x07,0xe8,0x83,0x41,0x8f,0x5e,0x5e,0x0c,0x06,0xe8,0x7b,0x41,0x8f,0x5e,0x5e,0x0e,0x05,0xe8,0x73,0x41,0x8f,0x5e,0x5e,0x10,0x04,0xe8,0x6b,0x41,0x8f,0x5e,0x5e,0x11,0x03,0xe8,0x63,0x41,0x8f,0x5e,0x5e,0x13,0x02,0xe8,0x5b,0x41,0x8f,0x5e,0x5e,0x15,0x01,0xe8,0x53,0x41,0x8f,0x5e,0x5e,0x17,0x00,0xa0,0xe1,0x27,0x78,0xfd,0x7f,0x00,0x00,0xe8,0x43,0x41,0x8f,0x5e,0x5e,0x00,0x12,0xe8,0x3b,0x41,0x8f,0x5e,0x5e,0x02,0x11,0xe8,0x33,0x41,0x8f,0x5e,0x5e,0x04,0x10,0xe8,0x2b,0x41,0x8f,0x5e,0x5e,0x06,0x0f,0xe8,0x23,0x41,0x8f,0x5e,0x5e,0x08,0x0e,0xe8,0x1b,0x41,0x8f,0x5e,0x5e,0x0a,0x0d,0xe8,0x13,0x41,0x8f,0x5e,0x5e,0x0c,0x0c,0xe8,0x0b,0x41,0x8f,0x5e,0x5e,0x0d,0x0b,0xe8,0x03,0x41,0x8f,0x5e,0x5e,0x0f,0x0a,0xe8,0xfb,0x40,0x8f,0x5e,0x5e,0x11,0x09,0xe8,0xf3,0x40,0x8f,0x5e,0x5e,0x12,0x08,0xe8,0xeb,0x40,0x8f,0x5e,0x5e,0x14,0x07,0xe8,0xe3,0x40,0x8f,0x5e,0x5e,0x15,0x06,0xe8,0xdb,0x40,0x8f,0x5e,0x5e,0x17,0x05,0xe8,0xd3,0x40,0x8f,0x5e,0x5e,0x19,0x04,0xe8,0xcb,0x40,0x8f,0x5e,0x5e,0x1b,0x03,0xe8,0xc3,0x40,0x8f,0x5e,0x5e,0x1d,0x02,0xe8,0xbb,0x40,0x8f,0x5e,0x5e,0x1f,0x01,0xe8,0xb3,0x40,0x8f,0x5e,0x5e,0x21};

        public static ReadOnlySpan<byte> Fromヽᐤ32iᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> ToCharヽᐤᐤ  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0xc3};

        public static ReadOnlySpan<byte> get_IsSymbolヽᐤᐤ  =>  new byte[71]{0x48,0x83,0xec,0x28,0x90,0x0f,0xb6,0x09,0x81,0xf9,0xff,0x00,0x00,0x00,0x77,0x1f,0x48,0x63,0xc9,0x48,0xba,0xf0,0x1d,0xc0,0xcf,0xfd,0x7f,0x00,0x00,0x0f,0xb6,0x0c,0x11,0x83,0xc1,0xe7,0x83,0xf9,0x03,0x0f,0x96,0xc0,0x0f,0xb6,0xc0,0xeb,0x13,0x33,0xd2,0xe8,0x7a,0xcb,0xd4,0x55,0x83,0xc0,0xe7,0x83,0xf8,0x03,0x0f,0x96,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> get_IsControlヽᐤᐤ  =>  new byte[21]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x09,0x48,0xb8,0x18,0x20,0xd7,0x76,0xfd,0x7f,0x00,0x00,0x48,0xff,0xe0};

        public static ReadOnlySpan<byte> get_IsPunctuationヽᐤᐤ  =>  new byte[71]{0x48,0x83,0xec,0x28,0x90,0x0f,0xb6,0x09,0x81,0xf9,0xff,0x00,0x00,0x00,0x77,0x1f,0x48,0x63,0xc9,0x48,0xba,0xf0,0x1d,0xc0,0xcf,0xfd,0x7f,0x00,0x00,0x0f,0xb6,0x0c,0x11,0x83,0xc1,0xee,0x83,0xf9,0x06,0x0f,0x96,0xc0,0x0f,0xb6,0xc0,0xeb,0x13,0x33,0xd2,0xe8,0xea,0xca,0xd4,0x55,0x83,0xc0,0xee,0x83,0xf8,0x06,0x0f,0x96,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> get_IsDigitヽᐤᐤ  =>  new byte[51]{0x48,0x83,0xec,0x28,0x90,0x0f,0xb6,0x09,0x81,0xf9,0xff,0x00,0x00,0x00,0x77,0x0e,0x83,0xc1,0xd0,0x83,0xf9,0x09,0x0f,0x96,0xc0,0x0f,0xb6,0xc0,0xeb,0x10,0x33,0xd2,0xe8,0x9b,0xca,0xd4,0x55,0x83,0xf8,0x08,0x0f,0x94,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> get_IsWhiteSpaceヽᐤᐤ  =>  new byte[82]{0x48,0x83,0xec,0x28,0x90,0x0f,0xb6,0x09,0x81,0xf9,0xff,0x00,0x00,0x00,0x77,0x2a,0x83,0xf9,0x20,0x74,0x1e,0x8d,0x51,0xf7,0x83,0xfa,0x04,0x76,0x16,0x81,0xf9,0xa0,0x00,0x00,0x00,0x74,0x0e,0x81,0xf9,0x85,0x00,0x00,0x00,0x0f,0x94,0xc0,0x0f,0xb6,0xc0,0xeb,0x05,0xb8,0x01,0x00,0x00,0x00,0xeb,0x13,0x33,0xd2,0xe8,0x2f,0xca,0xd4,0x55,0x83,0xc0,0xf5,0x83,0xf8,0x02,0x0f,0x96,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> get_IsLetterヽᐤᐤ  =>  new byte[21]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x09,0x48,0xb8,0xa0,0x1e,0xd7,0x76,0xfd,0x7f,0x00,0x00,0x48,0xff,0xe0};

        public static ReadOnlySpan<byte> get_IsLowerヽᐤᐤ  =>  new byte[21]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x09,0x48,0xb8,0xc0,0x1e,0xd7,0x76,0xfd,0x7f,0x00,0x00,0x48,0xff,0xe0};

        public static ReadOnlySpan<byte> get_IsUpperヽᐤᐤ  =>  new byte[21]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x09,0x48,0xb8,0xb8,0x1e,0xd7,0x76,0xfd,0x7f,0x00,0x00,0x48,0xff,0xe0};

        public static ReadOnlySpan<byte> op_BitwiseAndヽᐤUtf8PointㆍUtf8Pointᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x23,0xc2,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_BitwiseOrヽᐤUtf8PointㆍUtf8Pointᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x0b,0xc2,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_ExclusiveOrヽᐤUtf8PointㆍUtf8Pointᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x33,0xc2,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_IncrementヽᐤUtf8Pointᐤ  =>  new byte[45]{0x50,0x0f,0x1f,0x40,0x00,0xc6,0x04,0x24,0x7f,0x0f,0xb6,0xc1,0x8b,0x14,0x24,0x0f,0xb6,0xd2,0x3b,0xc2,0x7d,0x10,0x0f,0xb6,0xc1,0xff,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3,0x33,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> op_DecrementヽᐤUtf8Pointᐤ  =>  new byte[48]{0x50,0x0f,0x1f,0x40,0x00,0xc6,0x04,0x24,0x00,0x0f,0xb6,0xc1,0x8b,0x14,0x24,0x0f,0xb6,0xd2,0x3b,0xc2,0x7e,0x10,0x0f,0xb6,0xc1,0xff,0xc8,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3,0xb8,0x7f,0x00,0x00,0x00,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> op_AdditionヽᐤUtf8PointㆍUtf8Pointᐤ  =>  new byte[35]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x03,0xc2,0x8b,0xd0,0xc1,0xfa,0x1f,0x83,0xe2,0x7f,0x03,0xd0,0x83,0xe2,0x80,0x2b,0xc2,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_EqualityヽᐤUtf8PointㆍUtf8Pointᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x3b,0xc2,0x0f,0x94,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_InequalityヽᐤUtf8PointㆍUtf8Pointᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x3b,0xc2,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_LessThanヽᐤUtf8PointㆍUtf8Pointᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x3b,0xc2,0x0f,0x9c,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_LessThanOrEqualヽᐤUtf8PointㆍUtf8Pointᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x3b,0xc2,0x0f,0x9e,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_GreaterThanヽᐤUtf8PointㆍUtf8Pointᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x3b,0xc2,0x0f,0x9f,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_GreaterThanOrEqualヽᐤUtf8PointㆍUtf8Pointᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x3b,0xc2,0x0f,0x9d,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_implicit_Utf8Point_char  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0xc3};

        public static ReadOnlySpan<byte> op_implicit_Utf8Point_8u  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_MinValueヽᐤᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x33,0xc0,0xc3};

        public static ReadOnlySpan<byte> get_MaxValueヽᐤᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x7f,0x00,0x00,0x00,0xc3};

    }
}
