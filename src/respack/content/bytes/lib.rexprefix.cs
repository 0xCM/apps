//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2021
// License     :  MIT
// Generated   : 2021-12-01 21:34:42 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class lib_rexprefix
    {
        public static ReadOnlySpan<byte> get_Encodedヽᐤᐤ  =>  new byte[263]{0xe9,0xa3,0xcd,0xca,0xfe,0x5f,0x12,0x0d,0xe8,0x7b,0x34,0x90,0x5e,0x5e,0x13,0x0c,0xe8,0x73,0x34,0x90,0x5e,0x5e,0x15,0x0b,0xe8,0x6b,0x34,0x90,0x5e,0x5e,0x17,0x0a,0xe8,0x63,0x34,0x90,0x5e,0x5e,0x19,0x09,0xe8,0x5b,0x34,0x90,0x5e,0x5e,0x1b,0x08,0xe8,0x53,0x34,0x90,0x5e,0x5e,0x1c,0x07,0xe8,0x4b,0x34,0x90,0x5e,0x5e,0x1e,0x06,0xe8,0x43,0x34,0x90,0x5e,0x5e,0x20,0x05,0xe8,0x3b,0x34,0x90,0x5e,0x5e,0x22,0x04,0xe8,0x33,0x34,0x90,0x5e,0x5e,0x24,0x03,0xe8,0x2b,0x34,0x90,0x5e,0x5e,0x26,0x02,0xe8,0x23,0x34,0x90,0x5e,0x5e,0x28,0x01,0xe8,0x1b,0x34,0x90,0x5e,0x5e,0x2a,0x00,0x88,0xba,0x41,0x78,0xfb,0x7f,0x00,0x00,0xe8,0x0b,0x34,0x90,0x5e,0x5e,0x00,0x0d,0xe8,0x03,0x34,0x90,0x5e,0x5e,0x02,0x0c,0xe8,0xfb,0x33,0x90,0x5e,0x5e,0x04,0x0b,0xe8,0xf3,0x33,0x90,0x5e,0x5e,0x06,0x0a,0xe8,0xeb,0x33,0x90,0x5e,0x5e,0x08,0x09,0xe8,0xe3,0x33,0x90,0x5e,0x5e,0x0a,0x08,0xe8,0xdb,0x33,0x90,0x5e,0x5e,0x0c,0x07,0xe8,0xd3,0x33,0x90,0x5e,0x5e,0x0e,0x06,0xe8,0xcb,0x33,0x90,0x5e,0x5e,0x10,0x05,0xe8,0xc3,0x33,0x90,0x5e,0x5e,0x12,0x04,0xe8,0xbb,0x33,0x90,0x5e,0x5e,0x14,0x03,0xe8,0xb3,0x33,0x90,0x5e,0x5e,0x16,0x02,0xe8,0xab,0x33,0x90,0x5e,0x5e,0x18,0x01,0xe8,0xa3,0x33,0x90,0x5e,0x5e,0x1a,0x00,0xb0,0xbc,0x41,0x78,0xfb,0x7f,0x00,0x00,0xe8,0x93,0x33,0x90,0x5e,0x5e,0x00,0x00,0xd0,0xbf,0x41,0x78,0xfb,0x7f,0x00,0x00,0xe8,0x83,0x33,0x90,0x5e,0x5e,0x00};

        public static ReadOnlySpan<byte> Wヽᐤᐤ  =>  new byte[23]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0xc1,0xe8,0x03,0xa8,0x01,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> Wヽᐤbitᐤ  =>  new byte[28]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0x0f,0xb6,0xd2,0xf7,0xd2,0xff,0xc2,0x33,0xd0,0x83,0xe2,0x08,0x33,0xc2,0x0f,0xb6,0xc0,0x88,0x01,0xc3};

        public static ReadOnlySpan<byte> Rヽᐤᐤ  =>  new byte[23]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0xc1,0xe8,0x02,0xa8,0x01,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> Rヽᐤbitᐤ  =>  new byte[28]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0x0f,0xb6,0xd2,0xf7,0xd2,0xff,0xc2,0x33,0xd0,0x83,0xe2,0x04,0x33,0xc2,0x0f,0xb6,0xc0,0x88,0x01,0xc3};

        public static ReadOnlySpan<byte> Xヽᐤᐤ  =>  new byte[22]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0xd1,0xe8,0xa8,0x01,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> Xヽᐤbitᐤ  =>  new byte[28]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0x0f,0xb6,0xd2,0xf7,0xd2,0xff,0xc2,0x33,0xd0,0x83,0xe2,0x02,0x33,0xc2,0x0f,0xb6,0xc0,0x88,0x01,0xc3};

        public static ReadOnlySpan<byte> Bヽᐤᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0xa8,0x01,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> Bヽᐤbitᐤ  =>  new byte[28]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0x0f,0xb6,0xd2,0xf7,0xd2,0xff,0xc2,0x33,0xd0,0x83,0xe2,0x01,0x33,0xc2,0x0f,0xb6,0xc0,0x88,0x01,0xc3};

        public static ReadOnlySpan<byte> get_IsEmptyヽᐤᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x80,0x39,0x00,0x0f,0x94,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> get_IsNonEmptyヽᐤᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x80,0x39,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> Formatヽᐤᐤ  =>  new byte[40]{0x48,0x83,0xec,0x28,0x90,0x33,0xd2,0x33,0xc0,0x0f,0xb6,0x09,0x4c,0x8d,0x44,0x24,0x20,0x41,0x88,0x10,0x41,0x89,0x40,0x04,0x48,0x8b,0x54,0x24,0x20,0xe8,0x46,0x93,0x7f,0xfe,0x90,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> op_implicit_RexPrefix_Hex8  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0xc3};

        public static ReadOnlySpan<byte> op_implicit_RexPrefixCodeᕀ8u_RexPrefix  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_implicit_RexPrefix_8u  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0xc3};

        public static ReadOnlySpan<byte> op_implicit_8u_RexPrefix  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> get_Emptyヽᐤᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x33,0xc0,0xc3};

        public static ReadOnlySpan<byte> Rangeヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0xd4,0xd6,0xa9,0x3a,0x3a,0x02,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x10,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get__Rangeヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0xd4,0xd6,0xa9,0x3a,0x3a,0x02,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x10,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

    }
}
