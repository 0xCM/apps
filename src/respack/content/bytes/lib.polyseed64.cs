//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2021
// License     :  MIT
// Generated   : 2021-12-01 21:34:43 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class lib_polyseed64
    {
        public static ReadOnlySpan<byte> get_Countヽᐤᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x32,0x00,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> lookupヽᐤ32uᐤ  =>  new byte[46]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x48,0x83,0xf8,0x31,0x7c,0x07,0xba,0x31,0x00,0x00,0x00,0xeb,0x03,0x48,0x8b,0xd0,0xc1,0xe2,0x03,0x48,0x63,0xc2,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed00ヽᐤᐤ  =>  new byte[30]{0x0f,0x1f,0x44,0x00,0x00,0x33,0xc0,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed01ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x01,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed02ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x02,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed03ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x03,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed04ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x04,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed05ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x05,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed06ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x06,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed07ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x07,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed08ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x08,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed09ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x09,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed10ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x0a,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed11ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x0b,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed12ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x0c,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed13ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x0d,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed14ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x0e,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed15ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x0f,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed16ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x10,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed17ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x11,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed18ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x12,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed19ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x13,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed20ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x14,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed21ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x15,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_Seed22ヽᐤᐤ  =>  new byte[33]{0x0f,0x1f,0x44,0x00,0x00,0xb8,0x16,0x00,0x00,0x00,0xc1,0xe0,0x03,0x48,0x63,0xc0,0x48,0xba,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x03,0xc2,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_RawBytesヽᐤᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0xa4,0x57,0xaa,0x3a,0x3a,0x02,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x90,0x01,0x00,0x00,0x48,0x8b,0xc1,0xc3};

    }
}
