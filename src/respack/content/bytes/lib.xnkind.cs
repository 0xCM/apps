//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2021
// License     :  MIT
// Generated   : 2021-12-01 21:34:43 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class lib_xnkind
    {
        public static ReadOnlySpan<byte> FormatヽᐤNumericIndicatorᕀ16uᐤ  =>  new byte[28]{0x56,0x48,0x83,0xec,0x20,0x0f,0xb7,0xf1,0xb9,0x01,0x00,0x00,0x00,0xe8,0x56,0x37,0xfa,0xfb,0x66,0x89,0x70,0x0c,0x48,0x83,0xc4,0x20,0x5e,0xc3};

        public static ReadOnlySpan<byte> FormatヽᐤNumericKindᕀ32uᐤ  =>  new byte[189]{0x57,0x56,0x53,0x48,0x83,0xec,0x40,0x33,0xc0,0x48,0x89,0x44,0x24,0x20,0x48,0x89,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x38,0x8b,0xf1,0x48,0xb9,0x10,0x8f,0x13,0x77,0xfb,0x7f,0x00,0x00,0xe8,0xa2,0x6a,0xad,0x5b,0x48,0x8b,0xf8,0x0f,0xb7,0xce,0x89,0x4f,0x08,0xf7,0xc6,0x00,0x00,0x00,0x20,0x74,0x07,0xbb,0x75,0x00,0x00,0x00,0xeb,0x20,0xf7,0xc6,0x00,0x00,0x00,0x80,0x74,0x07,0xbb,0x69,0x00,0x00,0x00,0xeb,0x11,0xf7,0xc6,0x00,0x00,0x00,0x40,0x74,0x07,0xbb,0x66,0x00,0x00,0x00,0xeb,0x02,0x33,0xdb,0xb9,0x01,0x00,0x00,0x00,0xe8,0xc8,0x36,0xfa,0xfb,0x66,0x89,0x58,0x0c,0x45,0x33,0xc0,0x48,0xba,0x90,0x13,0xf4,0x31,0x3a,0x02,0x00,0x00,0x48,0x8b,0x12,0x48,0xb9,0x80,0x95,0xf4,0x31,0x3a,0x02,0x00,0x00,0x48,0x8b,0x09,0x4c,0x8d,0x4c,0x24,0x20,0x49,0x89,0x39,0x49,0x89,0x41,0x08,0x4d,0x89,0x41,0x10,0x49,0x89,0x51,0x18,0x4c,0x8d,0x44,0x24,0x20,0x48,0x8b,0xd1,0x33,0xc9,0xe8,0x7c,0x54,0x42,0x5b,0x90,0x48,0x83,0xc4,0x40,0x5b,0x5e,0x5f,0xc3};

        public static ReadOnlySpan<byte> ToCharヽᐤNumericIndicatorᕀ16uᐤ  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc1,0xc3};

        public static ReadOnlySpan<byte> IndicatorヽᐤNumericKindᕀ32uᐤ  =>  new byte[53]{0x0f,0x1f,0x44,0x00,0x00,0xf7,0xc1,0x00,0x00,0x00,0x20,0x74,0x07,0xb8,0x75,0x00,0x00,0x00,0xeb,0x20,0xf7,0xc1,0x00,0x00,0x00,0x80,0x74,0x07,0xb8,0x69,0x00,0x00,0x00,0xeb,0x11,0xf7,0xc1,0x00,0x00,0x00,0x40,0x74,0x07,0xb8,0x66,0x00,0x00,0x00,0xeb,0x02,0x33,0xc0,0xc3};

        public static ReadOnlySpan<byte> ReboxヽᐤNumericKindᕀ32uㆍdynamicᐤ  =>  new byte[23]{0x8b,0xc1,0x0f,0x1f,0x00,0x48,0x8b,0xca,0x8b,0xd0,0x48,0xb8,0x20,0xb1,0x1b,0x7b,0xfb,0x7f,0x00,0x00,0x48,0xff,0xe0};

        public static ReadOnlySpan<byte> ToTypeCodeヽᐤNumericKindᕀ32uᐤ  =>  new byte[34]{0x48,0x83,0xec,0x28,0x90,0xe8,0x76,0x4b,0xbf,0xfe,0x48,0x8b,0xc8,0x48,0xb8,0xf0,0xc5,0x61,0xd6,0xfb,0x7f,0x00,0x00,0x48,0x83,0xc4,0x28,0x48,0xff,0xe0,0x00,0x00,0x19,0x04};

        public static ReadOnlySpan<byte> IsSignedヽᐤNumericKindᕀ32uᐤ  =>  new byte[18]{0x0f,0x1f,0x44,0x00,0x00,0xf7,0xc1,0x00,0x00,0x00,0x80,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> TypeWidthヽᐤNumericKindᕀ32uᐤ  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc1,0xc3};

        public static ReadOnlySpan<byte> WidthヽᐤNumericKindᕀ32uᐤ  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc1,0xc3};

        public static ReadOnlySpan<byte> ToNumericKindヽᐤNumericWidthᕀ8uㆍNumericIndicatorᕀ16uᐤ  =>  new byte[24]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc9,0x0f,0xb7,0xd2,0x48,0xb8,0x50,0xc1,0x1b,0x7b,0xfb,0x7f,0x00,0x00,0x48,0xff,0xe0};

        public static ReadOnlySpan<byte> NumericKindヽᐤTypeᐤ  =>  new byte[18]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x50,0xea,0xe2,0x78,0xfb,0x7f,0x00,0x00,0x48,0xff,0xe0};

        public static ReadOnlySpan<byte> ToNumericKindヽᐤTypeCodeᕀ32iᐤ  =>  new byte[18]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x00,0xc0,0x1b,0x7b,0xfb,0x7f,0x00,0x00,0x48,0xff,0xe0};

    }
}
