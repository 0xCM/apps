//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2021
// License     :  MIT
// Generated   : 2021-12-01 21:34:43 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class lib_modrm
    {
        public static ReadOnlySpan<byte> Rmヽᐤᐤ  =>  new byte[22]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0xba,0x00,0x03,0x00,0x00,0xc4,0xe2,0x68,0xf7,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> Rmヽᐤ8uᐤ  =>  new byte[46]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0x0f,0xb6,0xd2,0xc1,0xe2,0x02,0x0f,0xb6,0xd2,0x41,0xb8,0x02,0x00,0x00,0x00,0xc4,0xc2,0xb8,0xf3,0xd0,0x41,0x81,0xf0,0xff,0xff,0x00,0x00,0x41,0x23,0xc0,0x0f,0xb6,0xc0,0x0b,0xc2,0x88,0x01,0xc3};

        public static ReadOnlySpan<byte> Regヽᐤᐤ  =>  new byte[22]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0xba,0x03,0x03,0x00,0x00,0xc4,0xe2,0x68,0xf7,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> Regヽᐤ8uᐤ  =>  new byte[50]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0x0f,0xb6,0xd2,0xc1,0xe2,0x02,0x0f,0xb6,0xd2,0x41,0xb8,0x10,0x00,0x00,0x00,0xc4,0xc2,0xb8,0xf3,0xd0,0x41,0xc1,0xe0,0x03,0x41,0x81,0xf0,0xff,0xff,0x00,0x00,0x41,0x23,0xc0,0x0f,0xb6,0xc0,0x0b,0xc2,0x88,0x01,0xc3};

        public static ReadOnlySpan<byte> Modヽᐤᐤ  =>  new byte[22]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0xba,0x06,0x02,0x00,0x00,0xc4,0xe2,0x68,0xf7,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> Modヽᐤ8uᐤ  =>  new byte[49]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0x0f,0xb6,0xd2,0xd1,0xe2,0x0f,0xb6,0xd2,0x41,0xb8,0x40,0x00,0x00,0x00,0xc4,0xc2,0xb8,0xf3,0xd0,0x41,0xc1,0xe0,0x06,0x41,0x81,0xf0,0xff,0xff,0x00,0x00,0x41,0x23,0xc0,0x0f,0xb6,0xc0,0x0b,0xc2,0x88,0x01,0xc3};

        public static ReadOnlySpan<byte> get_Encodedヽᐤᐤ  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0x01,0xc3};

        public static ReadOnlySpan<byte> get_IsNonEmptyヽᐤᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x80,0x39,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> get_IsEmptyヽᐤᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x80,0x39,0x00,0x0f,0x94,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_ExclusiveOrヽᐤModRmㆍModRmᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x33,0xc2,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_BitwiseOrヽᐤModRmㆍModRmᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x0f,0xb6,0xd2,0x0b,0xc2,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_implicit_ModRm_8u  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_Emptyヽᐤᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x33,0xc0,0xc3};

    }
}
